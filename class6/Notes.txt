

Agenda :

- Task Parallelism
- Delegates
- Events
- Reflection
- Memory allocation
* Garbage collection
- Unit testing in c#


Task parallelism :

- Prioritise the methods for execution
- Parallel.Invoke()


Delegates :

- Delegate that references the methods at run time
- Reference type
- Type safe pointers
- Many delegates in one class
- Delegates will work with lambda expression and anonymous methods

Need ???

- Call back the method at run time
- create event / invoke events

Three step process :

Step 1 : Declare the delegate

<accessmdofier> delegate <returntype> delegatename(parameter)


Step 2 : Set the target method

delegatename dg=new delegatename(methodname)


Step 3 : Invoke the delegate

dg()


Types :

- Single cast delegate

delegate refernces to one method at a time

d1----> m1

- Multicast delegate

one delegate references multiple methods at run time

d1----> m1,m2,...

Generic delegate: 

delegetes that work with different method signatures

T - data type

Events : 

- any user action on your application 
- click a button,navigate to url..click some option,search 
- events generated by user actions must be handled 

events and delegates work together

no delegate no event

Reflection :

- process of describing the metadata of datatypes,methods,constructor,
arrays,classess,assembly....

- System.reflection

metadata : data about the data

Informations :

1.Assembly
2.Assembly name
3.ConstructorInfo
4.MethodInfo
5.ParameterInfo
6.EventInfo
7.PropertyInfo
8.MemberInfo

